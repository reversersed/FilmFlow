<UserControl x:Class="FilmFlow.CustomControls.VideoPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             Name="PlayerControl"
             d:DesignHeight="540" d:DesignWidth="960"
             MouseMove="UserControl_MouseMove"
             MouseEnter="UserControl_MouseEnter"
             MouseLeave="UserControl_MouseLeave">
    <UserControl.Resources>
        <Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Height"
          Value="14" />
            <Setter Property="Width"
          Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse" Fill="{StaticResource LightAccentColor}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource DarkAccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="5"
             Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{StaticResource AccentColorKey}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Height="5"
            Grid.Row="1"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource LightAccentColorKey}"
                            Offset="0.0" />
                                    <GradientStop Color="{StaticResource DarkAccentColorKey}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource LightAccentColorKey}"
                            Offset="0.0" />
                                    <GradientStop Color="{StaticResource DarkAccentColorKey}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Row="1"
           x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="0.15*" MaxHeight="40" MinHeight="25"/>
        </Grid.RowDefinitions>
        <MediaElement   x:Name="VideoPlayerElement"
                        Grid.RowSpan="2"
                        ScrubbingEnabled="True"
                        HorizontalAlignment="Center"
                        MouseLeftButtonDown="VideoPlayerElement_MouseLeftButtonDown"
                        VerticalAlignment="Center"/>
        <TextBlock Text="{StaticResource NotSubscribed}"
                   x:Name="NotSubscribed"
                   MaxWidth="400"
                   FontSize="{StaticResource Large}"
                   TextWrapping="Wrap"
                   FontFamily="{StaticResource DefaultFont}"
                   FontWeight="Bold"
                   Foreground="{StaticResource DarkTextColor}"
                   Grid.RowSpan="2"
                   TextAlignment="Center"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Panel.ZIndex="2"/>
        <TextBlock Text="{StaticResource VideoLoadingError}"
                   x:Name="VideoNotLoaded"
                   MaxWidth="400"
                   FontSize="{StaticResource Large}"
                   TextWrapping="Wrap"
                   FontFamily="{StaticResource DefaultFont}"
                   FontWeight="Bold"
                   Foreground="{StaticResource DarkTextColor}"
                   Grid.RowSpan="2"
                   TextAlignment="Center"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Visibility="Collapsed"
                   Panel.ZIndex="2"/>
        <Button x:Name="PlayButton"
                Grid.RowSpan="2"
                BorderThickness="0">
            <Button.Content>
                <fa:IconImage Height="150" Width="150" Icon="Play" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            </Button.Content>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="{StaticResource LightAccentColor}"/>
                    <Setter Property="Background" Value="#99000000"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{StaticResource DarkAccentColor}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Grid Grid.Row="1" x:Name="RootGrid">
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.0"/>
            </Grid.Background>
            <Grid>
                <Grid.Background>
                    <SolidColorBrush Opacity="0.4" Color="Black"/>
                </Grid.Background>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=RootGrid, Path=IsMouseOver}" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=PlayButton, Path=IsEnabled}" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=PlayerControl, Path=Cursor}" Value="None">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=PlayerControl, Path=Subscribed}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.05*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="0.02*"/>
                    <ColumnDefinition Width="0.4*"/>
                    <ColumnDefinition Width="0.05*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="0.05*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="PauseButton"
                        Grid.Column="1"
                        MinWidth="16"
                        MinHeight="16"
                        Visibility="Collapsed"
                        BorderThickness="0">
                    <Button.Content>
                        <fa:IconImage Margin="8"
                                      MinWidth="10"
                                      MinHeight="10"
                                      Icon="Pause"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    </Button.Content>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Foreground" Value="{StaticResource LightAccentColor}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border>
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource DarkAccentColor}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Grid Grid.Column="3" x:Name="VolumeGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="volumeButton"
                            Grid.Column="0" 
                            Background="Transparent" 
                            BorderThickness="0"
                            MaxHeight="35"
                            MaxWidth="35"
                            Click="volumeButton_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <Button.Content>
                            <fa:IconImage   x:Name="iconVolume"
                                            Cursor="Hand"
                                            Margin="4">
                            <fa:IconImage.Style>
                                    <Style TargetType="{x:Type fa:IconImage}">
                                        <Setter Property="Foreground" Value="{StaticResource LightAccentColor}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource DarkAccentColor}"/>
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </fa:IconImage.Style>
                            </fa:IconImage>
                        </Button.Content>
                    </Button>
                    <Slider x:Name="VolumeSlider"
                            Grid.Column="1"
                            IsMoveToPointEnabled="True"
                            AllowDrop="True"
                            Cursor="Hand"
                            DataContext="{Binding ElementName=VideoPlayerElement}"
                            Template="{StaticResource HorizontalSlider}"
                            MouseLeftButtonDown="VolumeSlider_ValueChanged"
                            Thumb.DragDelta="VolumeSlider_Drag"
                            MouseWheel="VolumeSlider_MouseWheel"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch"/>
                </Grid>
                <Slider x:Name="TimeSlider" 
                        Grid.Column="5"
                        IsMoveToPointEnabled="True"
                        AllowDrop="True"
                        DataContext="{Binding ElementName=VideoPlayerElement}"
                        Template="{StaticResource HorizontalSlider}"
                        Cursor="Hand"
                        MouseLeftButtonUp="TimeSlider_ValueChanged"
                        Thumb.DragCompleted="TimeSlider_Drag"
                        Thumb.DragDelta="TimeSlider_DragDelta"
                        Thumb.DragStarted="TimeSlider_DragStarted"
                        PreviewMouseLeftButtonDown="TimeSlider_MouseLeftButtonDown"
                        PreviewMouseLeftButtonUp="TimeSlider_MouseLeftButtonUp"
                        MouseWheel="TimeSlider_MouseWheel"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch"/>
                <TextBlock Grid.Column="6"
                           Text="{Binding Path=ElapsedTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           DataContext="{Binding ElementName=PlayerControl}"
                           VerticalAlignment="Center"
                           Margin="5,0,0,0"
                           Foreground="{StaticResource LightTextColor}"
                           FontSize="{StaticResource Small}"
                           FontFamily="{StaticResource DefaultFont}"/>
                <Button x:Name="FullscreenButton"
                            Grid.Column="7"
                            BorderThickness="0">
                    <Button.Content>
                        <fa:IconImage Margin="8" x:Name="FullscreenIcon" Icon="Expand" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    </Button.Content>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Foreground" Value="{StaticResource LightAccentColor}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border>
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource DarkAccentColor}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
